[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "geetools"
version = "1.9.1"
description = "A collection of tools to work with Google Earth Engine Python API"
keywords = [
  "python",
  "geospatial",
  "remote-sensing",
  "google-earth-engine",
  "earthengine",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"
dependencies = [
    "earthengine-api>=1", # fully static implementation
    "requests",
    "pandas",
    "geopandas",
    "deprecated",
    "ee-extra",
    "xee>=0.0.11", # xee change dtype management
    "yamlable",
    "matplotlib",
    "anyascii",
]

[[project.authors]]
name = "Rodrigo E. Principe"
email = "fitoprincipe82@gmail.com"

[project.license]
text = "MIT"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/gee-community/geetools"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-deadfixtures",
    "httplib2",
    "pytest-regressions",
    "Pillow",
    "pytest-gee>=0.3.5", # to make IC creation possible in the test suit
    "jsonschema",
]
doc = [
  "sphinx>=6.2.1",
  "pydata-sphinx-theme",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-autoapi>=3.1",  # single page implementation
  "ipykernel",
  "httplib2",
  "jupyter-sphinx",
  "myst-nb",
  "pytest-gee>=0.3.7", # avoid issue with rdt env variables
  "sphinx-icon",
  "sphinx-last-updated-by-git",
]

[tool.hatch.build.targets.wheel]
only-include = ["geetools"]

[tool.hatch.envs.default]
dependencies = [
  "pre-commit",
  "commitizen",
  "nox[uv]"
]
post-install-commands = ["pre-commit install"]

[tool.commitizen]
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = false
version = "1.9.1"
version_files = [
    "pyproject.toml:version",
    "geetools/__init__.py:__version__",
    "docs/conf.py:release",
    "CITATION.cff:version"
]

[tool.pytest.ini_options]
testpaths = "tests"

[tool.ruff]
line-length = 100
fix = true
extend-exclude = ["geetools/__init__.py"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "D", "RUF"]
ignore = [
  "E501",  # line too long | Black take care of it
  "D212",  # Multi-line docstring | We use D213
  "D101",  # Missing docstring in public class | We use D106
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D102"] # Missing docstring in public method | this is test who cares

[tool.coverage.run]
source = ["geetools"]
branch = true

[tool.mypy]
scripts_are_modules = true
ignore_missing_imports = true
install_types = true
non_interactive = true
warn_redundant_casts = true

[tool.codespell]
skip = "geetools/tools/*,geetools/classification.py,**/*.ipynb,**/*.yml"
